@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# 查找依赖的系统库
if (APPLE)
    find_library(APPLICATION_SERVICES_FRAMEWORK ApplicationServices REQUIRED)
    find_library(QUARTZ_CORE QuartzCore REQUIRED)
    find_library(COCOA Cocoa REQUIRED)
    find_library(FOUNDATION Foundation REQUIRED)
    find_library(OPENGL_FRAMEWORK OpenGL REQUIRED)
    find_library(ICONV_LIBRARIES NAMES iconv libiconv libiconv-2 c)
    find_library(CORE_MEDIA CoreMedia)
    
    set(TGFX_SYSTEM_LIBS 
        ${APPLICATION_SERVICES_FRAMEWORK}
        ${QUARTZ_CORE}
        ${COCOA}
        ${FOUNDATION}
        ${OPENGL_FRAMEWORK}
        ${ICONV_LIBRARIES}
        ${CORE_MEDIA}
    )
else ()
    find_package(Threads REQUIRED)
    set(TGFX_SYSTEM_LIBS ${CMAKE_THREAD_LIBS_INIT} dl)
    set(TGFX_COMPILE_OPTIONS -fPIC -pthread)
endif ()

# 设置库路径
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Debug和Release库路径
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(TGFX_LIBRARY_PATH "${_IMPORT_PREFIX}/debug/lib")
else()
    set(TGFX_LIBRARY_PATH "${_IMPORT_PREFIX}/lib")
endif()

# 查找TGFX库
find_library(TGFX_LIBRARY 
    NAMES tgfx.a tgfx.lib tgfx
    PATHS ${TGFX_LIBRARY_PATH}
    NO_DEFAULT_PATH
    REQUIRED
)

# 创建导入目标
if(NOT TARGET tgfx::tgfx)
    add_library(tgfx::tgfx STATIC IMPORTED)
    
    set_target_properties(tgfx::tgfx PROPERTIES
        IMPORTED_LOCATION "${TGFX_LIBRARY}"
        INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
        INTERFACE_LINK_LIBRARIES "${TGFX_SYSTEM_LIBS}"
    )
    
    # 设置编译选项（仅限非Apple平台）
    if(TGFX_COMPILE_OPTIONS)
        set_target_properties(tgfx::tgfx PROPERTIES
            INTERFACE_COMPILE_OPTIONS "${TGFX_COMPILE_OPTIONS}"
        )
    endif()
endif()

# 设置变量供用户使用
set(TGFX_FOUND TRUE)
set(TGFX_INCLUDE_DIRS "${_IMPORT_PREFIX}/include")
set(TGFX_LIBRARIES tgfx::tgfx)

check_required_components(tgfx)